@page "/creationsondage"
@inject HttpClient Http
@inject IAuthService AuthService
@inject NavigationManager NavigationManager



<div class="card" style="border-radius:10px">
    <div class="card-header" style="border-radius:10px">
        <h3>Création d'un sondage</h3>
    </div>
    <EditForm Model="sondage" OnValidSubmit="Creersondage">
        <div style="font-size:15px">
            <DataAnnotationsValidator />
            <ValidationSummary />
        </div>
        <div class="card-body">
            <div class="form-group">
                <label for="Zone">Libellé du sondage :</label>
                <InputText placeholder="sondage" class="form-control" @bind-Value="sondage.Libellé" />
                <div style="font-size:12px">
                    <ValidationMessage For="@(() => sondage.Libellé)" />
                </div>
            </div>
            <div class="form-group">
                <label for="Ville">Question :</label>
                <InputText placeholder="Question" class="form-control" @bind-Value="sondage.Question" ParsingErrorMessage="Vous devez saisir le poid" />
                <div style="font-size:12px">
                    <ValidationMessage For="@(() => sondage.Question)" />
                </div>
            </div>
            <div class="form-group">
                <label for="Code">Type :</label>
                <InputText placeholder="Type" class="form-control" @bind-Value="sondage.Type" />
                <div style="font-size:12px">
                    <ValidationMessage For="@(() => sondage.Type)" />
                </div>
            </div>
            <div class="form-group">
                <label for="Code">Status :</label>
                <InputText placeholder="Status" class="form-control" @bind-Value="sondage.Statut" />
                <div style="font-size:12px">
                    <ValidationMessage For="@(() => sondage.Statut)" />
                </div>
            </div>
            <div class="form-group">
                <label>Obligatoire :</label>
                <div class="col-sm-10">
                    <div>
                        <InputCheckbox id="checkboxCustom1" @bind-Value="sondage.Obligatoire" />
                        <label for="checkboxCustom1">Cette question est obligatoire</label>
                    </div>
                </div>
            </div>
                    <div class="form-group text-center">
                        @if (wait)
                        {
                            <button type="submit" class="btn btn-success">
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                Ajouter...
                            </button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-success">Ajouter</button>
                        }
                    </div>
                </div>
</EditForm>
</div>


@code {

    Sondage sondage = new Sondage();
    private bool wait = false;


    private async Task Creersondage()
    {
        //ShowErrors = false;
        wait = true;
        //await Task.Delay(10000);

        //Uri crzone = new Uri("api/Sondages");
        //var result = await AuthService.PostJsonAsync<Sondage>(crzone,sondage);

        //var zoneasjson = JsonSerializer.Serialize(sondage);
        string sondageContent = JsonConvert.SerializeObject(sondage);
        var response = await Http.PostAsync("api/Sondages",new StringContent(sondageContent, Encoding.UTF8, "application/json"));

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/sondage");
            wait = false;
        }
        else
        {
            //    Error = result.Error;
            //    ShowErrors = true;
            response.StatusCode.ToString();
        }
    }
}
